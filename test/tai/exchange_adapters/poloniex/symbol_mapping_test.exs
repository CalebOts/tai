defmodule Tai.ExchangeAdapters.Poloniex.SymbolMappingTest do
  use ExUnit.Case, async: true
  doctest Tai.ExchangeAdapters.Poloniex.SymbolMapping

  alias Tai.ExchangeAdapters.Poloniex.SymbolMapping

  test "to_poloniex returns a valid string for the symbol on Poloniex" do
    assert SymbolMapping.to_poloniex(:ampbtc) == "BTC_AMP"
    assert SymbolMapping.to_poloniex(:ardrbtc) == "BTC_ARDR"
    assert SymbolMapping.to_poloniex(:bchbtc) == "BTC_BCH"
    assert SymbolMapping.to_poloniex(:bcnbtc) == "BTC_BCN"
    assert SymbolMapping.to_poloniex(:bcybtc) == "BTC_BCY"
    assert SymbolMapping.to_poloniex(:belabtc) == "BTC_BELA"
    assert SymbolMapping.to_poloniex(:blkbtc) == "BTC_BLK"
    assert SymbolMapping.to_poloniex(:btcdbtc) == "BTC_BTCD"
    assert SymbolMapping.to_poloniex(:btmbtc) == "BTC_BTM"
    assert SymbolMapping.to_poloniex(:btsbtc) == "BTC_BTS"
    assert SymbolMapping.to_poloniex(:burstbtc) == "BTC_BURST"
    assert SymbolMapping.to_poloniex(:clambtc) == "BTC_CLAM"
    assert SymbolMapping.to_poloniex(:cvcbtc) == "BTC_CVC"
    assert SymbolMapping.to_poloniex(:dashbtc) == "BTC_DASH"
    assert SymbolMapping.to_poloniex(:dcrbtc) == "BTC_DCR"
    assert SymbolMapping.to_poloniex(:dgbbtc) == "BTC_DGB"
    assert SymbolMapping.to_poloniex(:dogebtc) == "BTC_DOGE"
    assert SymbolMapping.to_poloniex(:emc2btc) == "BTC_EMC2"
    assert SymbolMapping.to_poloniex(:etcbtc) == "BTC_ETC"
    assert SymbolMapping.to_poloniex(:ethbtc) == "BTC_ETH"
    assert SymbolMapping.to_poloniex(:expbtc) == "BTC_EXP"
    assert SymbolMapping.to_poloniex(:fctbtc) == "BTC_FCT"
    assert SymbolMapping.to_poloniex(:fldcbtc) == "BTC_FLDC"
    assert SymbolMapping.to_poloniex(:flobtc) == "BTC_FLO"
    assert SymbolMapping.to_poloniex(:gamebtc) == "BTC_GAME"
    assert SymbolMapping.to_poloniex(:gasbtc) == "BTC_GAS"
    assert SymbolMapping.to_poloniex(:gnobtc) == "BTC_GNO"
    assert SymbolMapping.to_poloniex(:gntbtc) == "BTC_GNT"
    assert SymbolMapping.to_poloniex(:grcbtc) == "BTC_GRC"
    assert SymbolMapping.to_poloniex(:hucbtc) == "BTC_HUC"
    assert SymbolMapping.to_poloniex(:lbcbtc) == "BTC_LBC"
    assert SymbolMapping.to_poloniex(:lskbtc) == "BTC_LSK"
    assert SymbolMapping.to_poloniex(:ltcbtc) == "BTC_LTC"
    assert SymbolMapping.to_poloniex(:maidbtc) == "BTC_MAID"
    assert SymbolMapping.to_poloniex(:navbtc) == "BTC_NAV"
    assert SymbolMapping.to_poloniex(:neosbtc) == "BTC_NEOS"
    assert SymbolMapping.to_poloniex(:nmcbtc) == "BTC_NMC"
    assert SymbolMapping.to_poloniex(:nxcbtc) == "BTC_NXC"
    assert SymbolMapping.to_poloniex(:nxtbtc) == "BTC_NXT"
    assert SymbolMapping.to_poloniex(:omgbtc) == "BTC_OMG"
    assert SymbolMapping.to_poloniex(:omnibtc) == "BTC_OMNI"
    assert SymbolMapping.to_poloniex(:pascbtc) == "BTC_PASC"
    assert SymbolMapping.to_poloniex(:pinkbtc) == "BTC_PINK"
    assert SymbolMapping.to_poloniex(:potbtc) == "BTC_POT"
    assert SymbolMapping.to_poloniex(:ppcbtc) == "BTC_PPC"
    assert SymbolMapping.to_poloniex(:radsbtc) == "BTC_RADS"
    assert SymbolMapping.to_poloniex(:repbtc) == "BTC_REP"
    assert SymbolMapping.to_poloniex(:ricbtc) == "BTC_RIC"
    assert SymbolMapping.to_poloniex(:sbdbtc) == "BTC_SBD"
    assert SymbolMapping.to_poloniex(:scbtc) == "BTC_SC"
    assert SymbolMapping.to_poloniex(:steembtc) == "BTC_STEEM"
    assert SymbolMapping.to_poloniex(:storjbtc) == "BTC_STORJ"
    assert SymbolMapping.to_poloniex(:strbtc) == "BTC_STR"
    assert SymbolMapping.to_poloniex(:stratbtc) == "BTC_STRAT"
    assert SymbolMapping.to_poloniex(:sysbtc) == "BTC_SYS"
    assert SymbolMapping.to_poloniex(:viabtc) == "BTC_VIA"
    assert SymbolMapping.to_poloniex(:vrcbtc) == "BTC_VRC"
    assert SymbolMapping.to_poloniex(:vtcbtc) == "BTC_VTC"
    assert SymbolMapping.to_poloniex(:xbcbtc) == "BTC_XBC"
    assert SymbolMapping.to_poloniex(:xcpbtc) == "BTC_XCP"
    assert SymbolMapping.to_poloniex(:xembtc) == "BTC_XEM"
    assert SymbolMapping.to_poloniex(:xmrbtc) == "BTC_XMR"
    assert SymbolMapping.to_poloniex(:xpmbtc) == "BTC_XPM"
    assert SymbolMapping.to_poloniex(:xrpbtc) == "BTC_XRP"
    assert SymbolMapping.to_poloniex(:xvcbtc) == "BTC_XVC"
    assert SymbolMapping.to_poloniex(:zecbtc) == "BTC_ZEC"
    assert SymbolMapping.to_poloniex(:zrxbtc) == "BTC_ZRX"

    assert SymbolMapping.to_poloniex(:bcheth) == "ETH_BCH"
    assert SymbolMapping.to_poloniex(:cvceth) == "ETH_CVC"
    assert SymbolMapping.to_poloniex(:etceth) == "ETH_ETC"
    assert SymbolMapping.to_poloniex(:gaseth) == "ETH_GAS"
    assert SymbolMapping.to_poloniex(:gnoeth) == "ETH_GNO"
    assert SymbolMapping.to_poloniex(:gnteth) == "ETH_GNT"
    assert SymbolMapping.to_poloniex(:lsketh) == "ETH_LSK"
    assert SymbolMapping.to_poloniex(:omgeth) == "ETH_OMG"
    assert SymbolMapping.to_poloniex(:repeth) == "ETH_REP"
    assert SymbolMapping.to_poloniex(:steemeth) == "ETH_STEEM"
    assert SymbolMapping.to_poloniex(:zeceth) == "ETH_ZEC"
    assert SymbolMapping.to_poloniex(:zrxeth) == "ETH_ZRX"

    assert SymbolMapping.to_poloniex(:bcnxmr) == "XMR_BCN"
    assert SymbolMapping.to_poloniex(:blkxmr) == "XMR_BLK"
    assert SymbolMapping.to_poloniex(:btcdxmr) == "XMR_BTCD"
    assert SymbolMapping.to_poloniex(:dashxmr) == "XMR_DASH"
    assert SymbolMapping.to_poloniex(:ltcxmr) == "XMR_LTC"
    assert SymbolMapping.to_poloniex(:maidxmr) == "XMR_MAID"
    assert SymbolMapping.to_poloniex(:nxtxmr) == "XMR_NXT"
    assert SymbolMapping.to_poloniex(:zecxmr) == "XMR_ZEC"

    assert SymbolMapping.to_poloniex(:bchusdt) == "USDT_BCH"
    assert SymbolMapping.to_poloniex(:btcusdt) == "USDT_BTC"
    assert SymbolMapping.to_poloniex(:dashusdt) == "USDT_DASH"
    assert SymbolMapping.to_poloniex(:etcusdt) == "USDT_ETC"
    assert SymbolMapping.to_poloniex(:ethusdt) == "USDT_ETH"
    assert SymbolMapping.to_poloniex(:ltcusdt) == "USDT_LTC"
    assert SymbolMapping.to_poloniex(:nxtusdt) == "USDT_NXT"
    assert SymbolMapping.to_poloniex(:repusdt) == "USDT_REP"
    assert SymbolMapping.to_poloniex(:strusdt) == "USDT_STR"
    assert SymbolMapping.to_poloniex(:xmrusdt) == "USDT_XMR"
    assert SymbolMapping.to_poloniex(:xrpusdt) == "USDT_XRP"
    assert SymbolMapping.to_poloniex(:zecusdt) == "USDT_ZEC"
  end

  test "to_poloniex returns an upcase string for unknown symbols" do
    assert SymbolMapping.to_poloniex(:unknown) == "UNKNOWN"
    assert SymbolMapping.to_poloniex("unknown") == "UNKNOWN"
  end

  test "to_tai returns an atom of reversed pair" do
    assert SymbolMapping.to_tai("USDT_BTC") == :btcusdt
  end
end
